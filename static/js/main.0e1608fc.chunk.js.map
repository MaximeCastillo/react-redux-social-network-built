{"version":3,"sources":["redux/authentification/actionTypes.js","redux/authentification/authReducer.js","redux/posts/actionsTypes.js","redux/posts/postsReducer.js","redux/rootReducer.js","redux/store.js","redux/authentification/authActions.js","components/Header/index.jsx","components/PostCreator/index.jsx","redux/posts/postsActions.js","components/PostsList/Post/index.jsx","components/PostsList/index.jsx","pages/Home/index.jsx","pages/Login/index.jsx","pages/Profile/index.jsx","pages/Register/index.jsx","pages/OtherProfile/index.jsx","App.jsx","index.jsx"],"names":["AUTH_SUCCESS","AUTH_FAILED","LOAD_ACCOUNT","LOGOUT_SUCCESS","initialState","token","isAuthenticated","user","authReducer","state","action","type","Cookies","set","expires","remove","NEW_POST","DELETE_POST","EDIT_POST","LOAD_POSTS","LOAD_POSTS_COUNT","posts","postsReducer","concat","newPost","filter","post","id","toDeletePost","map","toEditPost","postsCount","RootReducer","combineReducers","authentification","store","createStore","compose","applyMiddleware","thunkMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","authSuccess","response","jwt","authFailed","Header","useSelector","history","useHistory","dispatch","useDispatch","logout","push","Navbar","bg","variant","Brand","href","Nav","className","to","onClick","PostCreator","useState","message","setMessage","username","Form","onSubmit","e","preventDefault","data","text","fetch","method","headers","body","JSON","stringify","then","ok","Error","statusText","json","catch","error","alert","Group","controlId","Control","as","rows","onChange","target","value","Button","Post","like","setLike","alreadyLiked","setAlreadyLiked","editPostLikes","editPost","console","log","useEffect","destroyPost","deletePost","Card","Body","Text","Subtitle","Link","PostsList","loadPosts","style","flexWrap","sort","a","b","Date","created_at","Home","loadCount","Authorization","loadPostsCount","Jumbotron","Login","identifier","setIdentifier","password","setPassword","htmlFor","placeholder","Profile","setUserName","description","setDescription","userPosts","setUserPosts","location","reload","Register","setUsername","mail","setMail","email","replace","OtherProfile","userId","useParams","get","setUser","App","loadAccount","PrivateRoute","Component","component","rest","render","props","pathname","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e1608fc.chunk.js","sourcesContent":["export const AUTH_SUCCESS = 'REGISTER_SUCCESS';\nexport const AUTH_FAILED = 'REGISTER_FAILED';\nexport const LOAD_ACCOUNT = 'LOAD_ACCOUNT';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';","import { AUTH_SUCCESS , AUTH_FAILED, LOAD_ACCOUNT, LOGOUT_SUCCESS } from './actionTypes';\nimport Cookies from 'js-cookie';\n\nconst initialState = {\n  token: null,\n  isAuthenticated: null,\n  user: null\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case LOAD_ACCOUNT:\n      return {\n        ...state,\n        token: action.token,\n        isAuthenticated: true,\n        user: action.user\n      }\n    case AUTH_SUCCESS:\n      Cookies.set('token', action.token , { expires: 7 })\n      return {\n        ...state,\n        ...action.token,\n        token: action.token,\n        isAuthenticated: true,\n        user: action.user\n      }\n    case AUTH_FAILED:\n    case LOGOUT_SUCCESS:\n      Cookies.remove('token')\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false\n      }\n    default: \n      return state\n  }\n}\n\nexport default authReducer;","export const NEW_POST = 'NEW_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const EDIT_POST = 'EDIT_POST';\nexport const LOAD_POSTS = 'LOAD_POSTS';\nexport const LOAD_POSTS_COUNT = 'LOAD_POSTS_COUNT';","import { NEW_POST, DELETE_POST, EDIT_POST, LOAD_POSTS, LOAD_POSTS_COUNT} from './actionsTypes';\n\nconst initialState = {\n  posts: [],\n}\n\nconst postsReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case NEW_POST:\n      return {\n        ...state,\n        posts: state.posts.concat(action.newPost)\n      }\n      case DELETE_POST:\n        return {\n          ...state,\n          posts: state.posts.filter(post => post.id !== action.toDeletePost.id)\n        }\n      case EDIT_POST:\n        return {\n          ...state,\n          posts: state.posts.map(post => post.id === action.toEditPost.id ? action.toEditPost : post)\n        }\n      case LOAD_POSTS: \n        return {\n          ...state,\n          posts: state.posts.concat(action.posts)\n        }\n      case LOAD_POSTS_COUNT:\n        return {\n          ...state,\n          postsCount: action.postsCount\n        }\n      default:\n        return state\n    }\n}\n\nexport default postsReducer","import { combineReducers } from 'redux';\nimport authReducer from './authentification/authReducer'\nimport postsReducer from './posts/postsReducer'\n\nconst RootReducer = combineReducers({\n  authentification: authReducer,\n  posts: postsReducer\n});\n\nexport default RootReducer;","import { createStore , compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport RootReducer from './rootReducer';\n\nlet store = createStore (\n  RootReducer,\n  compose(applyMiddleware(thunkMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n);\n\nexport default store;","import { AUTH_SUCCESS, AUTH_FAILED, LOAD_ACCOUNT, LOGOUT_SUCCESS } from './actionTypes';\nimport Cookies from 'js-cookie';\n\nexport const authSuccess = (response) => {\n  return {\n    type: AUTH_SUCCESS,\n    token: response.jwt,\n    user: response.user\n  }\n}\n\nexport const authFailed = () => {\n  return {\n    type: AUTH_FAILED\n  }\n}\n\nexport const loadAccount = (response) => {\n  return {\n    type: LOAD_ACCOUNT,\n    user: response,\n    token: Cookies.get('token')\n  }\n}\n\nexport const logoutSuccess = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  }\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { logoutSuccess } from '../../redux/authentification/authActions'\nimport './header.scss'\n\nconst Header = () => {\n  const isAuthenticated = useSelector(state => state.authentification.isAuthenticated)\n\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const logout = () => {\n    dispatch(logoutSuccess())\n    history.push(\"/\");\n  }\n\n  const headNavigation = () => {\n    if (isAuthenticated) {\n      return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">My Social Network</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav className=\"nav-item\">\n              <Link to=\"/\">Accueil</Link>\n            </Nav>\n            <Nav className=\"nav-item\">\n              <Link to=\"/profile\">Profil</Link>\n            </Nav>\n            <Nav className=\"nav-item\">\n              <button onClick={logout}>Se déconnecter</button>\n            </Nav>\n          </Nav>\n        </Navbar>\n      )\n    } else {\n      return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">My Social Network</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav className=\"nav-item\">\n              <Link to=\"/\">Accueil</Link>\n            </Nav>\n            <Nav className=\"nav-item\">\n              <Link to=\"/login\">Se connecter</Link>\n            </Nav>\n            <Nav className=\"nav-item\">\n              <Link to=\"/register\">Créér un compte</Link>\n            </Nav>\n          </Nav>\n        </Navbar>\n      )\n    }\n  }\n\n\treturn headNavigation();\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { newPost } from '../../redux/posts/postsActions';\n\nconst PostCreator = () => {\n  const isAuthenticated = useSelector(state => state.authentification.isAuthenticated);\n  const user = useSelector(state => state.authentification.user);\n  const token = useSelector(state => state.authentification.token)\n\n  const [message, setMessage] = useState('');\n\n  const dispatch = useDispatch();\n\n  const createPost = (e) => {\n    e.preventDefault()\n    const data = {\n      user: user.id,\n      text: message\n    }\n    fetch('https://my-pasteque-space.herokuapp.com/posts', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch(newPost(response))\n      setMessage('')\n    })\n    .catch(error => {\n      alert(error)\n    })\n  }\n\n  return (\n    <div>\n      { isAuthenticated &&\n        <section>\n          <h5>Salut {user.username}, tu peux ajouter ton post ici :</h5>\n          <Form onSubmit={createPost} >\n            <Form.Group controlId=\"Textarea\">\n              <Form.Control as=\"textarea\" rows={7} onChange={e => setMessage(e.target.value)} value={message} />\n            </Form.Group>\n            <Button type=\"submit\">Valider</Button>\n          </Form>\n        </section>\n      }\n    </div>\n  )\n}\n\nexport default PostCreator;","import { NEW_POST, DELETE_POST, EDIT_POST, LOAD_POSTS, LOAD_POSTS_COUNT} from './actionsTypes';\n\nexport const newPost = (post) => {\n  return {\n    type: NEW_POST,\n    newPost: post\n  }\n}\n\nexport const editPost = (post) => {\n  return {\n    type: EDIT_POST,\n    toEditPost: post\n  }\n}\n\n\nexport const deletePost = (post) => {\n  return {\n    type: DELETE_POST,\n    toDeletePost: post\n  }\n}\n\nexport const loadPosts = (posts) => {\n  return {\n    type: LOAD_POSTS,\n    posts: posts\n  }\n\n}\n\nexport const loadPostsCount = (postsCount) => {\n  return {\n    type: LOAD_POSTS_COUNT,\n    postsCount: postsCount\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { useSelector,useDispatch } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { deletePost, editPost } from \"redux/posts/postsActions\";\n\nconst Post = ({ post }) => {\n  const dispatch = useDispatch();\n  const [like, setLike] = useState(post.like);\n  const [alreadyLiked, setAlreadyLiked] = useState(false);\n  const isAuthenticated = useSelector(state => state.authentification.isAuthenticated);\n  const user = useSelector(state => state.authentification.user);\n  const token = useSelector(state => state.authentification.token);\n  \n  const likePost = () => {\n    setLike(like + 1);\n    setAlreadyLiked(true);\n  };\n  const dislikePost = () => {\n    setLike(like - 1);\n    setAlreadyLiked(false);\n  };\n\n  const editPostLikes = () => {\n    const data = {\n      like,\n    };\n\n    fetch(`https://my-pasteque-space.herokuapp.com/posts/${post.id}`, {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    })\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response\n    })\n    .then((response) => response.json())\n    .then(response => {\n      dispatch(editPost(response))\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n  useEffect(() => {\n    if(like === post.like){\n      return\n    }\n    editPostLikes();\n  }, [like]);\n\n  const destroyPost = (toDeletePost) => {\n    fetch(`https://my-pasteque-space.herokuapp.com/posts/${toDeletePost.id}`, {\n      method: 'delete',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n    })\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response\n    })\n    .then((response) => response.json())\n    .then(response => {\n      dispatch(deletePost(response))\n    })\n    .catch(error => {\n      alert(error)\n    })\n  }\n  \n  return (\n    <Card className=\"col-lg-3\">\n        <Card.Body>\n          <Card.Text>\n            {post.text}\n          </Card.Text>\n          {isAuthenticated &&\n            <Card.Subtitle className=\"mb-2 text-muted\">{post.like} likes</Card.Subtitle>\n          }\n          {post.user && isAuthenticated &&\n            <Card.Link href={`/user/${post.user.id}`}>{post.user.username}</Card.Link>\n          }\n          {post.user && isAuthenticated && post.user.id === user.id &&\n            <Button type=\"submit\" onClick={() => destroyPost(post)}>Supprimer</Button>\n          }\n          {!alreadyLiked &&\n          <Button type=\"submit\" variant=\"success\" onClick={() => likePost(post)}>👍</Button>\n          }\n          {alreadyLiked &&\n          <Button type=\"submit\" variant=\"danger\" onClick={() => dislikePost(post)}>👎</Button>\n          }\n        </Card.Body>\n      </Card>\n  );\n};\n\nexport default Post;","import React, { useEffect } from \"react\";\nimport { loadPosts } from \"redux/posts/postsActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"components/PostsList/Post\";\n\nconst PostsList = () => {\n  const posts = useSelector((state) => state.posts.posts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const searchPosts = () => {\n      fetch(\"https://my-pasteque-space.herokuapp.com/posts\")\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response;\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(loadPosts(response));\n        })\n        .catch((error) => {\n          alert(error);\n        });\n    }\n    searchPosts()\n  }, [dispatch])\n\n  return (\n    <div>\n      <h2>Voici les posts :</h2>\n      <div className=\"d-flex\" style={{flexWrap: 'wrap'}}>\n        {posts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)).map((post) => (\n          <Post post={post} key={post.id}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PostsList;","import React, { useEffect } from 'react';\nimport PostCreator from 'components/PostCreator';\nimport PostsList from 'components/PostsList';\nimport { Jumbotron } from 'react-bootstrap';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadPostsCount } from \"redux/posts/postsActions\";\n\n\nconst Home = () => {\n  const isAuthenticated = useSelector(state => state.authentification.isAuthenticated)\n  const postsCount = useSelector((state) => state.posts.postsCount);\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.authentification.token);\n  \n  const loadCount = () => {\n    fetch(\"https://my-pasteque-space.herokuapp.com/posts/count\", {\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then((response) => response.json())\n    .then((response) => {\n      dispatch(loadPostsCount(response));\n    })\n    .catch((error) => {\n      alert(error);\n    });\n  }\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      loadCount()\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAuthenticated])\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Bienvenue sur My Social Network</h1>\n        <p>\n          Ce site est un entraînement à Redux et React. Nous utilisons l'authentification et le routing pour créer un petit réseau social.\n        </p>\n        { postsCount &&\n        <small>\n          Il y a actuellement {postsCount} messages sur notre réseau social ! 😲\n        </small>\n        }\n      </Jumbotron>\n      <PostCreator />\n      <PostsList />\n    </div>\n  );\n};\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { authSuccess, authFailed } from '../../redux/authentification/authActions'\n\nconst Login = () => {\n  const isAuthenticated = useSelector(state => state.authentification.isAuthenticated)\n  const [identifier, setIdentifier] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/')\n    }\n  },  [isAuthenticated, history])\n\n  const newLogin = (e) => {\n    e.preventDefault()\n\n    const data = {\n      identifier: identifier,\n      password: password\n    }\n\n    fetch('https://my-pasteque-space.herokuapp.com/auth/local', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => {\n        if(!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then(response => response.json())\n      .then(response => {\n        dispatch(authSuccess(response));\n        history.push('/')\n      })\n      .catch(error => {\n        dispatch(authFailed())\n        alert('Erreur avec la combinaison Identifiant / Mot de passe')\n      })\n  }\n\n  return (\n    <div>\n      <h1>Se connecter</h1>\n      <form onSubmit={newLogin}>\n        <div className=\"form-group\">\n          <label htmlFor=\"identifier\">Pseudo ou email</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"pseudo\"\n            placeholder=\"Entrez votre pseudo ou votre adresse mail\"\n            value={identifier}\n            onChange={(e) => setIdentifier(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Mot de passe</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Entrez votre mot de passe\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Se connecter\n        </button>\n      </form>\n    </div>\n  )\n\n};\n\nexport default Login;","import React, {useEffect, useState} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Post from 'components/PostsList/Post'\n\nconst Profile = () => {\n  const user = useSelector(state => state.authentification.user)\n  const token = useSelector(state => state.authentification.token)\n  const [username, setUserName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [userPosts , setUserPosts] = useState([]);\n\n  const profilChange = (e) => {\n    e.preventDefault()\n    const data = {\n      username: username,\n      description: description\n    }\n    fetch(`https://my-pasteque-space.herokuapp.com/users/${user.id}`, {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    })\n    .then(response => {\n      if(!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response\n    })\n    .then(response => response.json())\n    .then(response => {\n      setUserName(username)\n      setDescription(description)\n      window.location.reload();\n    })\n    .catch(error => {\n      alert(error)\n    })\n  }\n\n  useEffect(() => {\n    const fetchPosts = () => {\n      fetch(`https://my-pasteque-space.herokuapp.com/posts?user.id=${user.id}`, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then(response => {\n        setUserPosts(response)\n      })\n      .catch((error) => {\n        alert(error)\n      })}\n      fetchPosts()\n  }, [token, user.id])\n  \n\n  return (\n    <section>\n      <h1>Bienvenue sur votre profil {user.username} !</h1>\n      <p>{user.description}</p>\n\n      <form onSubmit={profilChange}>\n        <div className=\"form-group\">\n          <label htmlFor=\"identifier\">Modifier mon pseudo</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"pseudo\"\n            placeholder=\"Nouveau pseudo\"\n            value={username || user.username}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Modifier ma description</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"description\"\n            placeholder=\"Nouvelle description\"\n            value={description || user.description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Modifier mes informations\n        </button>\n      </form>\n      <div className=\"d-flex\" style={{flexWrap: 'wrap'}}>\n        {userPosts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)).map((post) => (\n          <Post post={post} key={post.id}/>\n        ))}\n      </div>\n    </section>\n  )\n};\n\nexport default Profile;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { authSuccess, authFailed } from '../../redux/authentification/authActions'\n\nconst Register = () => {\n  const isAuthenticated = useSelector(state => state.authentification.isAuthenticated)\n  const [username, setUsername] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push('/')\n    }\n  },  [isAuthenticated, history])\n\n  const newRegister = (e) => {\n    e.preventDefault()\n\n    const data = {\n      username: username,\n      email: mail,\n      password: password\n    }\n  \n    fetch('https://my-pasteque-space.herokuapp.com/auth/local/register', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => {\n        if(!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then(response => response.json())\n      .then(response => {\n        dispatch(authSuccess(response));\n        history.replace('/')\n      })\n      .catch(error => {\n        dispatch(authFailed())\n        alert(error)\n      })\n  }\n\n  return (\n    <div>\n      <h1>Register</h1>\n      <form onSubmit={newRegister}>\n        <div className=\"form-group\">\n          <label htmlFor=\"pseudo\">Pseudo</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"pseudo\"\n            placeholder=\"Choisissez votre pseudo\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"mail\">Adresse Email</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"mail\"\n            placeholder=\"Entrez votre adresse email\"\n            value={mail}\n            onChange={(e) => setMail(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Mot de passe</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            placeholder=\"Entrez votre mot de passe\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          M'inscrire\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\nimport Post from 'components/PostsList/Post';\n\nconst OtherProfile = () => {\n  let { userId } = useParams();\n  const token = Cookies.get('token')\n  const [user , setUser] = useState({})\n  const [userPosts , setUserPosts] = useState([])\n\n  useEffect(() => {\n    const fetchUser = () => {\n      fetch(`https://my-pasteque-space.herokuapp.com/users/${userId}`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response\n    })\n    .then((response) => response.json())\n    .then(response => {\n      setUser(response)\n    })\n    .catch((error) => {\n      alert(error)\n    })}\n\n    const fetchPosts = () => {\n      fetch(`https://my-pasteque-space.herokuapp.com/posts?user.id=${userId}`, {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then(response => {\n        setUserPosts(response)\n      })\n      .catch((error) => {\n        alert(error)\n      })}\n      fetchUser()\n      fetchPosts()\n  }, [token, userId])\n\n  return (\n    <section>\n      <h1>Bienvenue sur le profil de {user.username}</h1>\n      <p>{user.description}</p>\n      <div className=\"d-flex\" style={{flexWrap: 'wrap'}}>\n        {userPosts.sort((a, b) => new Date(b.created_at) - new Date(a.created_at)).map((post) => (\n          <Post post={post} key={post.id}/>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default OtherProfile;\n","import React, {useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cookies from 'js-cookie'\nimport { loadAccount } from './redux/authentification/authActions'\n\n// COMPONENTS\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile'\nimport Register from './pages/Register'\nimport OtherProfile from './pages/OtherProfile'\n\nconst App = () => {\n  const isAuthenticated = useSelector(state => state.authentification.isAuthenticated)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (Cookies.get('token')) {\n      fetch('https://my-pasteque-space.herokuapp.com/users/me', {\n        method: 'get',\n        headers: {\n          'Authorization': `Bearer ${Cookies.get('token')}`\n        },\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw Error(response.statusText);\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch(loadAccount(response))\n        })\n        .catch((error) => {\n          console.log(error)\n        })\n    }\n  }, [dispatch])\n\n  const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n      isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: '/login' }} />\n      )\n    )} />\n  );\n\n  return (\n    <Router>\n      <div>\n        <Header />\n\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <Route path=\"/user/:userId\" component={OtherProfile} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\nimport App from './App'\n\n\n//SCSS\n\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}